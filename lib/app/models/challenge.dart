import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:talent_pitch/app/enums/category.dart';
import 'package:talent_pitch/app/models/transformers/nullable_empty_string.dart';
import 'package:talent_pitch/app/models/base_model.dart';

/// Associates our `challenge.dart` with the code generated by Freezed
part 'challenge.freezed.dart';

/// Since our Challenge class is serializable, we must add this line.
part 'challenge.g.dart';

String challengeBaseModel(dynamic value) {
  return 'challenge';
}

@freezed
class Challenge extends BaseModel with _$Challenge {
  const factory Challenge({
    required int id,
    @Default('challenge')
    @JsonKey(
        name: 'base_model_type',
        defaultValue: 'challenge',
        fromJson: challengeBaseModel,
        includeToJson: true,
        required: false)
    String baseModelType,
    required String name,
    String? description,
    @JsonKey(name: 'company_name') String? companyName,
    @JsonKey(name: 'company_logo') String? companyLogo,
    @JsonKey(fromJson: nullableEmptyString) String? video,
    @JsonKey(fromJson: nullableEmptyString) String? image,
  }) = _Challenge;

  factory Challenge.fromJson(Map<String, Object?> json) =>
      _$ChallengeFromJson(json);
}
