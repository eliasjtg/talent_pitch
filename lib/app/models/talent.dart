import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:talent_pitch/app/enums/category.dart';
import 'package:talent_pitch/app/models/transformers/nullable_empty_string.dart';
import 'package:talent_pitch/app/models/base_model.dart';

/// Associates our `talent.dart` with the code generated by Freezed
part 'talent.freezed.dart';

/// Since our Talent class is serializable, we must add this line.
part 'talent.g.dart';

@freezed
class Talent extends BaseModel with _$Talent {
  const factory Talent({
    required int id,
    @Default('talent')
    @JsonKey(
        name: 'base_model_type',
        defaultValue: 'talent',
        includeFromJson: false,
        required: false)
    String baseModelType,
    required String name,
    required String email,
    @JsonKey(name: 'want_to_be', fromJson: nullableEmptyString)
    String? wantToBe,
    @JsonKey(fromJson: nullableEmptyString) String? video,
    @JsonKey(fromJson: nullableEmptyString) String? avatar,
    @JsonKey(fromJson: nullableEmptyString) String? about,
  }) = _Talent;

  factory Talent.fromJson(Map<String, Object?> json) => _$TalentFromJson(json);
}
